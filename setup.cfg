[wheel]
universal = 1

[bdist_wheel]
universal = 1

[flake8]
# it's not a bug that we aren't using all of hacking, ignore:
# F812: list comprehension redefines ...
# H101: Use TODO(NAME)
# H202: assertRaises Exception too broad
# H233: Python 3.x incompatible use of print operator
# H301: one import per line
# H306: imports not in alphabetical order (time, os)
# H401: docstring should not start with a space
# H403: multi line docstrings should end on a new line
# H404: multi line docstring should start without a leading new line
# H405: multi line docstring summary not separated with an empty line
# H501: Do not use self.__dict__ for string formatting
# F401: imported but unused
# W604 backticks are deprecated, use 'repr()'
# F811 redefinition of unused 'mocker' from line 13
# F841 local variable 'mock_datadog_initialize' is assigned to but never used
ignore = F812,H101,H202,H233,H301,H306,H401,H403,H404,H405,H501,F401,W604,F811,F841,E302,E401,E501,E265,E713,E402,D204,D102,D400,D205,D202,D103,D209,D105,D101,D401,D200,E127,D100,E501,D101

exclude =
    # No need to traverse our git directory
    .git,
    # There's no value in checking cache directories
    __pycache__,
    # The conf file is mostly autogenerated, ignore it
    docs/source/conf.py,
    # The old directory contains Flake8 2.0
    old,
    # This contains our built documentation
    build,
    # This contains builds of flake8 that we don't want to check
    dist,
    .svn,
    CVS,
    .bzr,
    .hg,
    .tox,
    docs,
    virtualenv_run,
    tests/*
max-line-length = 120
# max-complexity: which will emit a warning if the McCabe complexity of a function is higher than the value. By default itâ€™s deactivated.
max-complexity = 18

[tool:pytest]
timeout = 60
testpaths = tests
norecursedirs = .git testing_config
# Python 3 users might want to use a newest version of the mock package as published on PyPI than the one that comes with the Python distribution.
# This will force the plugin to import mock instead of the unittest.mock module bundled with Python 3.4+. Note that this option is only used in Python 3+, as Python 2 users only have the option to use the mock package from PyPI anyway.
mock_use_standalone_module = true

[isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
# splits long import on multiple lines indented by 4 spaces
multi_line_output = 4
indent = "    "
# by default isort don't check module indexes
not_skip = __init__.py
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
# typing is stdlib on py35 but 3rd party on py34, let it hang in between
known_inbetweens = typing
sections = FUTURE,STDLIB,INBETWEENS,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

